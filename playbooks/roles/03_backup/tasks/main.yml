---
- name: Create /srv/backup
  file:
    path: /{{ app_path }}/backup
    state: directory
  register: stack_folder

- name: init volume backup
  shell: |
    "alias stackrestic="source .env && docker run \
    -v ${HOST_STACK_CONF_PATH}:/backup-repo \
    -v ./rclone.conf:/root/.config/rclone/rclone.conf:ro \
    -e RESTIC_REPOSITORY=rclone:${RCLONE_CONFIGURATION_NAME}:${PCLOUD_STACK_REPO} \
    -e RESTIC_PASSWORD=${RESTIC_PASSWORD} \
    --rm --env-file .env mazzolino/restic:${IMAGE_VERSION}

    alias volumerestic="source .env && docker run \
    -v ${HOST_SOURCE_BACKUP}:/backup-repo \
    -v ./rclone.conf:/root/.config/rclone/rclone.conf:ro \
    -e RESTIC_REPOSITORY=rclone:${RCLONE_CONFIGURATION_NAME}:${PCLOUD_REPO} \
    -e RESTIC_PASSWORD=${RESTIC_PASSWORD} \
    --rm --env-file .env mazzolino/restic:${IMAGE_VERSION}

    stackrestic init
    volumerestic init"
  when: stack_folder.changed

- name: Copy backup template files to /srv/backup
  template:
    src: "{{ item }}"
    dest: /srv/backup/{{ item | replace('.template', '') }}
    mode: "0644"
  loop:
    - docker-compose.yml
    - rclone.conf
    - .env.template
  register: backup_config

- name: Stop backup
  community.docker.docker_compose_v2:
    project_src: /srv/backup
    state: absent
  when: backup_config.changed

- name: Start backup
  community.docker.docker_compose_v2:
    project_src: /srv/backup
    state: present
